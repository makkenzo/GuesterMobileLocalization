<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Guester.Tamplates.OrderDatail"
             xmlns:vm="clr-namespace:Guester.ViewModels"
             xmlns:fa="clr-namespace:FontAwesome"
             xmlns:res="clr-namespace:Guester.Resources"
             xmlns:models="clr-namespace:Guester.Models"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:data="clr-namespace:Syncfusion.Maui.DataSource;assembly=Syncfusion.Maui.DataSource"   
             xmlns:syncfusion="clr-namespace:Syncfusion.Maui.ListView;assembly=Syncfusion.Maui.ListView"             
             Shell.NavBarIsVisible="False"
             xmlns:buttons="clr-namespace:Syncfusion.Maui.Buttons;assembly=Syncfusion.Maui.Buttons"
             xmlns:controll="clr-namespace:Guester.Tamplates"             
             x:DataType="vm:OrderDetailPageViewModel"
             BindingContext="vm:OrderDetailPageViewModel"
             xmlns:l="clr-namespace:CustomLayouts"
             xmlns:helpers="clr-namespace:Guester.Helpers"
             xmlns:ff="clr-namespace:FFImageLoading.Maui;assembly=FFImageLoading.Compat.Maui"
             
             >



    <ContentView.Resources>
        
        
        
        <ResourceDictionary>
            <toolkit:InvertedBoolConverter x:Key="InvertedConverter" />
            <toolkit:VariableMultiValueConverter 
                x:Key="VariableMultiValueConverter"
                ConditionType="Any"
               />
            <helpers:CompactCurrencyConverter x:Key="CompactCurrencyConverter"/>
            <helpers:TestConverter x:Key="TestConverter" />
           
        </ResourceDictionary>
        <ResourceDictionary>
            <Style TargetType="HorizontalStackLayout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryLight},Dark={StaticResource PrimaryDark}}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>  
            
            <Style TargetType="StackLayout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Gray100}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
        
        <DataTemplate x:Key="ClientAddressTemplate" x:DataType="models:ClientAddress">
                <Border BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" Padding="20,25"  >
                    <StackLayout Spacing="15" >
                        <StackLayout Orientation="Horizontal">
                            <Label Text="{x:Static res:AppResources.Address}" VerticalOptions="Start" FontSize="Title"  />
                            <Label Text="{x:Static fa:FontAwesomeIcons.MapLocationDot}" FontFamily="FAS" TextColor="{StaticResource Primary}"
                                   FontAttributes="Bold" FontSize="Title" HorizontalOptions="EndAndExpand" />
                        </StackLayout>
                        <Border Padding="15"  >
                            <StackLayout Spacing="10">
                                <Label Text="{x:Static res:AppResources.CountryLabel} " />
                                <Entry Text="{Binding Country,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.EnterCountry}"  FontSize="Subtitle"  />
                            </StackLayout>
                        </Border>
                        <Border Padding="15"  >
                            <StackLayout Spacing="10">
                                <Label Text="{x:Static res:AppResources.City}" />
                                <Entry Text="{Binding City,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.EnterCity}"  FontSize="Subtitle"  />
                            </StackLayout>
                        </Border>
                        <Border Padding="15"  >
                            <StackLayout Spacing="10">
                                <Label Text="{x:Static res:AppResources.Address}" />
                                <Entry Text="{Binding Address,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.EnterAddress}"  FontSize="Subtitle"  />
                            </StackLayout>
                        </Border>

                        <Border Padding="15"  >
                            <StackLayout Spacing="10">
                                <Label Text="{x:Static res:AppResources.Commentary}" />
                                <Entry Text="{Binding Description,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.WriteCommentLabel}"  FontSize="Subtitle"  />
                            </StackLayout>
                        </Border>
                    </StackLayout>
                </Border>
            </DataTemplate>
            
        <DataTemplate x:Key="ItemTemplate" x:DataType="models:Items">
            <Border  StrokeShape="RoundRectangle 15"   IsEnabled="{Binding IsActive,Mode=OneWay}"  >
                <Grid RowDefinitions="160,60,40"   >
                    <Image Grid.RowSpan="3" Source="{Binding Picture,Converter={helpers:ImageSourceConverter},Mode=OneWay}" Aspect="AspectFill"    />
                    <BoxView Grid.Row="1" Grid.RowSpan="2"   BackgroundColor="#80000000" />

                    <Label Grid.Row="1"  Text="{Binding Name,Mode=OneWay}" TextColor="White" FontSize="18"
                            VerticalTextAlignment="Center" HorizontalOptions="Center" FontAttributes="Bold" Margin="10,5"/>
                    <Label Grid.Row="2"  TextColor="White" FontSize="17" VerticalOptions="Center" HorizontalOptions="Center" FontAttributes="None" Margin="10,5" >
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsCategory, Mode=OneWay}"  Value="true">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </Label.Triggers>

                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding Price,Mode=OneWay}"/>
                                <Span Text=" "/>
                                <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency ,Mode=OneWay}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                            
                       
                </Grid>
                <Border.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SelectProductOrCategoryCommand}" CommandParameter="{Binding .}" />
                </Border.GestureRecognizers>
            </Border>
        </DataTemplate>
        
         <DataTemplate x:Key="PromotionBonusTempate" x:DataType="models:Items" >
            <Grid RowDefinitions="110,60,10"   WidthRequest="150" >
                <Image Grid.RowSpan="3" Source="{Binding  Picture,  Converter={helpers:ImageSourceConverter},Mode=OneWay}"
Aspect="AspectFill" />
                <BoxView  Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#70000000"/>
                <BoxView    BackgroundColor="#70000000" IsVisible="{Binding Count,Mode=OneWay}"/>
                <Border BackgroundColor="Red" HeightRequest="30" WidthRequest="30"  VerticalOptions="Start" HorizontalOptions="End" Margin="4"
            IsVisible="{Binding Count,Mode=OneWay}">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="15" />
                    </Border.StrokeShape>
                    <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" TextColor="White" FontSize="20" HorizontalOptions="Center" VerticalOptions="Center"/>
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer  Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=ClearBonusGoodsCommand}"
                                  CommandParameter="{Binding .}"/>
                    </Border.GestureRecognizers>
                </Border>
                <Label Text="{Binding Count,Mode=OneWay}" IsVisible="{Binding Count,Mode=OneWay}" VerticalOptions="Center" HorizontalOptions="Center"
           FontSize="30" FontAttributes="Bold" TranslationY="20"  
         TextColor="{AppThemeBinding Dark={StaticResource TextColorDark},Light={StaticResource White}}"/>
                <Label Grid.Row="1" x:Name="TextLabel" Text="{Binding  Name,Mode=OneWay}" FontSize="16" FontAttributes="Bold"
    LineBreakMode="TailTruncation" Margin="5" TextColor="White" />

                <Label x:Name="PriceText" Grid.Row="1" TextColor="White"  FontSize="20"  VerticalOptions="EndAndExpand" HorizontalOptions="Center" >
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding Price,Mode=OneWay}" FontAttributes="Bold"/>
                            <Span Text=" "/>
                            <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency,Mode=OneWay }"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>


                <BoxView x:Name="Indicator" Grid.Row="2" BackgroundColor="Transparent"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer   Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SelectedBonusGoodsCommand}"
                                  CommandParameter="{Binding .}"/>
                </Grid.GestureRecognizers>
            </Grid>


        </DataTemplate>
        
        
        

        <DataTemplate x:Key="PromotionTemplate" x:DataType="models:Promotion">
            <Border HorizontalOptions="Start"  Padding="1" StrokeShape="RoundRectangle 20"  MinimumWidthRequest="200" >
                <Grid RowDefinitions="150,85" >
                    
                    <BoxView Grid.Row="1" Grid.RowSpan="2"   BackgroundColor="#80000000" />
                    <Label Grid.Row="1" Text="{Binding Name,Mode=OneWay}" TextColor="White"
                           FontSize="Subtitle" VerticalOptions="Center" HorizontalOptions="Center" FontAttributes="Bold" Margin="10,5"/>
                </Grid>
                <Border.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SelectedPromotionCommand}" CommandParameter="{Binding .}" />
                </Border.GestureRecognizers>
            </Border>
        </DataTemplate>
                
        <DataTemplate x:Key="ClientOrGuestProductTemplate" >
            <StackLayout  x:DataType="models:OrderSale" Spacing="5" Orientation="Vertical"   >


                
                <Grid RowDefinitions="90,*"   ColumnDefinitions="*,35,30,35,130"  IsVisible="{Binding IsHaveProduct,Mode=OneWay}" Padding="15,0,0,0" MaximumHeightRequest="150">


                    <StackLayout Orientation="Horizontal" HeightRequest="90"   
                              HorizontalOptions="FillAndExpand"
                               >
                        <Border    BackgroundColor="{StaticResource Primary}" Opacity=".6"  Padding="15" Margin="0,0,20,0" IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsSplitOrder , Mode=OneWay}">
                            <Label  Text="{Binding CountOrder,Mode=OneWay}"  
                                    TextColor="White"
                                    VerticalOptions="Center" 
                                    HorizontalOptions="Center"
                                    
                                    
                                    />

                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="5" />
                            </Border.StrokeShape>

                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SplitPlusOrderCommand}" CommandParameter="{Binding .}"/>
                            </Border.GestureRecognizers>
                        </Border>
                        <Label Text="{Binding 
                            Name,Mode=OneWay}" MinimumHeightRequest="65"  VerticalOptions="Center" VerticalTextAlignment="Center" 
                               HorizontalTextAlignment="Start"
                               
                               FontSize="16"
                               MinimumWidthRequest="150"
                               MaximumWidthRequest="230" />
                    </StackLayout>
                    
                    
                    <Label Grid.Row="1" Text="{Binding PositionDetail,Mode=OneWay}"  MaximumWidthRequest="250" 
                           MinimumWidthRequest="150"
                           HorizontalOptions="Start" IsVisible="{Binding PositionDetail, Converter={toolkit:IsStringNotNullOrEmptyConverter}}"
VerticalOptions="Center" FontSize="12" FontAttributes="Bold" Opacity=".6" />

                 
                    <Border Grid.Column="1" HeightRequest="60" 
                               
                            BackgroundColor="{StaticResource Primary}" IsVisible="{Binding IsMainPromotionItem,Mode=OneWay}" Opacity="0.6" IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsOrderPayed, Mode=OneWay, Converter={StaticResource InvertedConverter}}">
                        <Label Text="-"  FontFamily="FAR" FontAttributes="Bold"   FontSize="16" TextColor="White"
                              VerticalOptions="Center" HorizontalOptions="Center" >
                        </Label>
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=MinusProductCommand}" CommandParameter="{Binding .}"/>
                        </Border.GestureRecognizers>
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="20,5,20,5" />
                        </Border.StrokeShape>
                    </Border>
                   
                    
                    
                    
                    <Label Grid.Column="2"  Text="{Binding Amount,Mode=OneWay}" FontAttributes="Bold" TextColor="{StaticResource Primary}"
                           FontSize="16" HorizontalOptions="Center" VerticalOptions="Center"  IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsSplitOrder , Mode=OneWay, Converter={StaticResource InvertedConverter}}">

                    </Label>
                    <Label Grid.Column="2"  Text="{Binding Count , Mode=OneWay}" FontAttributes="Bold" TextColor="{StaticResource Primary}"
                          FontSize="16" HorizontalOptions="Center" VerticalOptions="Center" IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsSplitOrder , Mode=OneWay}" >

                    </Label>


                    <Border   HeightRequest="60" Grid.Column="3" BackgroundColor="{StaticResource Primary}" Opacity=".6" IsVisible="{Binding IsMainPromotionItem,Mode=OneWay}"  IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsOrderPayed, Mode=OneWay, Converter={StaticResource InvertedConverter}}"> 
                        <Label Grid.Column="2" Text="+" FontFamily="FAS" 
                               TextColor="White"
                              VerticalOptions="Center" HorizontalOptions="Center" >
                        </Label>
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=PlusProductCommand}" CommandParameter="{Binding .}"/>
                        </Border.GestureRecognizers>
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="5,20,5,20" />
                        </Border.StrokeShape>
                    </Border>

                        
                        
                        
                        
                    <Label Grid.Column="4"  VerticalTextAlignment="Start" HorizontalTextAlignment="End"  FontSize="12" Opacity=".6"  IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsSplitOrder , Mode=OneWay, Converter={StaticResource InvertedConverter}}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding Price,Mode=OneWay}"/>
                               
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label Grid.Column="4"  VerticalTextAlignment="End" HorizontalTextAlignment="End" FontSize="16"  IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsSplitOrder , Mode=OneWay, Converter={StaticResource InvertedConverter}}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding TotalPrice,Mode=OneWay}"  FontAttributes="Bold"/>
                              
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>

                </Grid>
                <!--<BoxView   HeightRequest="1" Opacity="0.5"  IsVisible="{Binding IsHavePromotion}" />-->
            
                <Grid  ColumnSpacing="4" ColumnDefinitions=".5*,*,*"  IsVisible="{Binding IsHavePromotion}" >
                    <Border BackgroundColor="{StaticResource Primary}">
                        <Label Text="{x:Static res:AppResources.Promotions}" TextColor="White" HorizontalOptions="Center" VerticalOptions="Center" FontSize="12" FontAttributes="Bold" />
                    </Border>
                    <Label Grid.Column="1" Text="{Binding Promotion.Name,Mode=OneWay}" VerticalOptions="Center" FontSize="14" />

                    <Label Grid.Column="2" Margin="0,0,10,0"  VerticalOptions="Center"  HorizontalOptions="End"
                           
                           FontSize="{OnPlatform iOS=Subtitle, Android=Medium}"  TextColor="Red" FontFamily="FAS" Text="{x:Static fa:FontAwesomeIcons.Trash}" >

                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=DeletePromotionCommand}" 
                                                  CommandParameter="{Binding .}" />
                        </Label.GestureRecognizers>
                    </Label>

                </Grid>
                
                <BoxView BackgroundColor="#b3b3b3"  HeightRequest="1"   />
                
                
                
            </StackLayout>            
        </DataTemplate>
      
        <DataTemplate x:Key="ClientTemplate" x:DataType="models:Client">

            <Border   x:Name="selectedClient"  Padding="0,15,0,15" Margin="5"    >

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter
                                        TargetName="selectedClient"
                                        Property="Border.BackgroundColor"
                                        Value="{StaticResource Primary}"/>
                                </VisualState.Setters>
                            </VisualState>

                            <VisualState x:Name="Normal">
                                <VisualState.Setters>

                                    <Setter
                                            TargetName="selectedClient"
                                            Property="Border.BackgroundColor"
                                            Value="Transparent"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </VisualStateManager.VisualStateGroups>


                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="15" />
                </Border.StrokeShape>


                <Label    HorizontalTextAlignment="Center"   VerticalTextAlignment="Center" VerticalOptions="CenterAndExpand"  FontSize="16" >
      <Label.FormattedText>
          <FormattedString>
              <Span Text="{Binding FullName,Mode=OneWay}"  FontAttributes="Bold" />
          </FormattedString>
      </Label.FormattedText>
  </Label>
            </Border>
        </DataTemplate>
            
            <DataTemplate x:Key="OrderTemplate" x:DataType="models:Orders">
                <StackLayout >
                    <BoxView HeightRequest="1" Opacity="0.5" />
                    <Border Padding="5">
                        <Label HorizontalTextAlignment="Start" Opacity="0.9" FontAttributes="None" VerticalTextAlignment="Center" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{x:Static res:AppResources.ReceiptNumber}" FontAttributes="None"/>
                                    <Span Text="" />
                                    <Span Text="{Binding Number, Mode=OneWay}" FontAttributes="None" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SelectOrderCommand}" CommandParameter="{Binding .}"/>
                        </Border.GestureRecognizers>
                    </Border>
                </StackLayout>


            </DataTemplate>
        
        <DataTemplate x:Key="SinnglModification" x:DataType="models:Modifiers">


            <syncfusion:SfListView ItemsSource="{Binding ModifiersList, Mode=OneWay}" MinimumWidthRequest="60" 
                        ItemSpacing="10"  
                        SelectionMode="Single"
                         SelectionBackground="Transparent"
                        SelectedItem="{Binding SelectedGods, Mode=TwoWay}"
                        HeaderSize="25" ItemSize="200"   >
                <syncfusion:SfListView.HeaderTemplate>
                    <DataTemplate>
                        <Label Text="{Binding Name, Mode=OneWay}" FontSize="15" FontAttributes="Bold" Opacity="0.6" />
                    </DataTemplate>
                </syncfusion:SfListView.HeaderTemplate>
             
                
                <syncfusion:SfListView.ItemTemplate>
                    <DataTemplate x:DataType="models:Goods">





                        <Grid RowDefinitions="110,60,10" WidthRequest="150">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroupList>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter
                                   TargetName="Indicator"
                                   Property="BoxView.Color"
                                   Value="{StaticResource Primary}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>

                                                <Setter
                                   TargetName="Indicator"
                                   Property="BoxView.Color"
                                   Value="Transparent"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateGroupList>
                            </VisualStateManager.VisualStateGroups>









                            <Image Grid.RowSpan="3" Source="{Binding Picture, Converter={helpers:ImageSourceConverter}, Mode=OneWay}" Aspect="AspectFill" />

                            <BoxView Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#70000000"/>

                            <Label Grid.Row="1" x:Name="TextLabel" Text="{Binding Name, Mode=OneWay}" FontSize="16" FontAttributes="Bold" LineBreakMode="TailTruncation" Margin="5" TextColor="White" />

                            <Label x:Name="PriceText" Grid.Row="1" TextColor="White" FontSize="20" VerticalOptions="EndAndExpand" HorizontalOptions="Center" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Price, Mode=OneWay}" FontAttributes="Bold"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency, Mode=OneWay}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>

                            <BoxView x:Name="Indicator" Grid.Row="2" BackgroundColor="Transparent"/>
                        </Grid>
                    </DataTemplate>
                </syncfusion:SfListView.ItemTemplate>



                <syncfusion:SfListView.SelectedItemTemplate>
                    <DataTemplate x:DataType="models:Goods">

                        <Grid RowDefinitions="110,60,10" WidthRequest="150">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroupList>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter
                                   TargetName="Indicator"
                                   Property="BoxView.Color"
                                   Value="{StaticResource Primary}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>

                                                <Setter
                                   TargetName="Indicator"
                                   Property="BoxView.Color"
                                   Value="Transparent"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateGroupList>
                            </VisualStateManager.VisualStateGroups>









                            <Image Grid.RowSpan="3" Source="{Binding Picture, Converter={helpers:ImageSourceConverter}, Mode=OneWay}" Aspect="AspectFill" />

                            <BoxView Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#70000000"/>

                            <Label Grid.Row="1" x:Name="TextLabel" Text="{Binding Name, Mode=OneWay}" FontSize="16" FontAttributes="Bold" LineBreakMode="TailTruncation" Margin="5" TextColor="White" />

                            <Label x:Name="PriceText" Grid.Row="1" TextColor="White" FontSize="20" VerticalOptions="EndAndExpand" HorizontalOptions="Center" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Price, Mode=OneWay}" FontAttributes="Bold"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency, Mode=OneWay}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>

                            <BoxView x:Name="Indicator" Grid.Row="2" BackgroundColor="{StaticResource Primary}"/>
                        </Grid>
                    </DataTemplate>
                </syncfusion:SfListView.SelectedItemTemplate>
                
                
                <syncfusion:SfListView.ItemsLayout>
                    <syncfusion:GridLayout SpanCount="4"/>
                </syncfusion:SfListView.ItemsLayout>
            </syncfusion:SfListView>


        </DataTemplate >
        
        
        
        <DataTemplate x:Key="SinnglModificationDetail" x:DataType="models:SelectedModifiers">
            <syncfusion:SfListView ItemsSource="{Binding SelectedGoodsId, Mode=OneWay}"
              ItemSpacing="10"  
              SelectionMode="None"
               SelectionBackground="Transparent"
              SelectedItem="{Binding ModifierId.SelectedGods, Mode=TwoWay}"
              HeaderSize="25" ItemSize="200"  >
                <syncfusion:SfListView.HeaderTemplate>
                    <DataTemplate>
                        <Label Text="{Binding  ModifierId.Name, Mode=OneWay}" FontSize="15" FontAttributes="Bold" Opacity="0.6" />
                    </DataTemplate>
                </syncfusion:SfListView.HeaderTemplate>


                <syncfusion:SfListView.ItemTemplate>
                    <DataTemplate x:DataType="models:Goods">





                        <Grid RowDefinitions="110,60,10" WidthRequest="150">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroupList>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter
                         TargetName="Indicator"
                         Property="BoxView.Color"
                         Value="{StaticResource Primary}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>

                                                <Setter
                         TargetName="Indicator"
                         Property="BoxView.Color"
                         Value="Transparent"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateGroupList>
                            </VisualStateManager.VisualStateGroups>









                            <Image Grid.RowSpan="3" Source="{Binding Picture, Converter={helpers:ImageSourceConverter}, Mode=OneWay}" Aspect="AspectFill" />

                            <BoxView Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#70000000"/>

                            <Label Grid.Row="1" x:Name="TextLabel" Text="{Binding Name, Mode=OneWay}" FontSize="16" FontAttributes="Bold" LineBreakMode="TailTruncation" Margin="5" TextColor="White" />

                            <Label x:Name="PriceText" Grid.Row="1" TextColor="White" FontSize="20" VerticalOptions="EndAndExpand" HorizontalOptions="Center" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Price, Mode=OneWay}" FontAttributes="Bold"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency, Mode=OneWay}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>

                            <BoxView x:Name="Indicator" Grid.Row="2" BackgroundColor="Transparent"/>
                        </Grid>
                    </DataTemplate>
                </syncfusion:SfListView.ItemTemplate>



                <syncfusion:SfListView.SelectedItemTemplate>
                    <DataTemplate x:DataType="models:Goods">





                        <Grid RowDefinitions="110,60,10" WidthRequest="150">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroupList>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter
                         TargetName="Indicator"
                         Property="BoxView.Color"
                         Value="{StaticResource Primary}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>

                                                <Setter
                         TargetName="Indicator"
                         Property="BoxView.Color"
                         Value="Transparent"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateGroupList>
                            </VisualStateManager.VisualStateGroups>









                            <Image Grid.RowSpan="3" Source="{Binding Picture, Converter={helpers:ImageSourceConverter}, Mode=OneWay}" Aspect="AspectFill" />

                            <BoxView Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#70000000"/>

                            <Label Grid.Row="1" x:Name="TextLabel" Text="{Binding Name, Mode=OneWay}" FontSize="16" FontAttributes="Bold" LineBreakMode="TailTruncation" Margin="5" TextColor="White" />

                            <Label x:Name="PriceText" Grid.Row="1" TextColor="White" FontSize="20" VerticalOptions="EndAndExpand" HorizontalOptions="Center" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Price, Mode=OneWay}" FontAttributes="Bold"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency, Mode=OneWay}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>

                            <BoxView x:Name="Indicator" Grid.Row="2" BackgroundColor="{StaticResource Primary}"/>
                        </Grid>
                    </DataTemplate>
                </syncfusion:SfListView.SelectedItemTemplate>


                <syncfusion:SfListView.ItemsLayout>
                    <syncfusion:GridLayout SpanCount="4"/>
                </syncfusion:SfListView.ItemsLayout>
            </syncfusion:SfListView>

        </DataTemplate >
        
        
        
        <DataTemplate x:Key="MultiModification"  x:DataType="models:Modifiers">

            <syncfusion:SfListView ItemsSource="{Binding ModifiersList, Mode=OneWay}"  
        ItemSpacing="10"  
        SelectionMode="Multiple"
         SelectionBackground="Transparent"
                                 
                                   
                                   AutoFitMode="DynamicHeight"

        ItemSize="250"   >
                <syncfusion:SfListView.HeaderTemplate>
                    <DataTemplate>
                        <Label Text="{Binding Name, Mode=OneWay}" FontSize="15" FontAttributes="Bold" Opacity="0.6"  Padding="0,10" />
                    </DataTemplate>
                </syncfusion:SfListView.HeaderTemplate>


                <syncfusion:SfListView.ItemTemplate>
                    
                    <DataTemplate x:DataType="models:Goods">
                     
                            <Grid RowDefinitions="110,60,10"   WidthRequest="150"    >
                                <Image Grid.RowSpan="3" Source="{Binding  Picture,  Converter={helpers:ImageSourceConverter},Mode=OneWay}"
Aspect="AspectFill" />
                                <BoxView  Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#70000000"/>
                                <BoxView    BackgroundColor="#70000000" IsVisible="{Binding Count,Mode=OneWay}"/>
                                <Border BackgroundColor="Red" HeightRequest="30" WidthRequest="30"  VerticalOptions="Start" HorizontalOptions="End" Margin="4"
            IsVisible="{Binding Count,Mode=OneWay}">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="15" />
                                    </Border.StrokeShape>
                                    <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" TextColor="White" FontSize="20" HorizontalOptions="Center" VerticalOptions="Center"/>
                                    <Border.GestureRecognizers>
                                        <TapGestureRecognizer  Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=CleareCommand}"
                                  CommandParameter="{Binding .}"/>
                                    </Border.GestureRecognizers>
                                </Border>
                                <Label Text="{Binding Count,Mode=OneWay}" IsVisible="{Binding Count,Mode=OneWay}" VerticalOptions="Center" HorizontalOptions="Center"
           FontSize="30" FontAttributes="Bold" TranslationY="20"  
         TextColor="{AppThemeBinding Dark={StaticResource TextColorDark},Light={StaticResource White}}"/>
                                <Label Grid.Row="1" x:Name="TextLabel" Text="{Binding  Name,Mode=OneWay}" FontSize="16" FontAttributes="Bold"
    LineBreakMode="TailTruncation" Margin="5" TextColor="White" />

                                <Label x:Name="PriceText" Grid.Row="1" TextColor="White"  FontSize="20"  VerticalOptions="EndAndExpand" HorizontalOptions="Center" >
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Price,Mode=OneWay}" FontAttributes="Bold"/>
                                            <Span Text=" "/>
                                            <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency,Mode=OneWay }"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>


                                <BoxView x:Name="Indicator" Grid.Row="2" BackgroundColor="Transparent"/>
                                <Grid.GestureRecognizers>
                                    <TapGestureRecognizer   Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IncrementCommand}"
                                  CommandParameter="{Binding .}"/>
                                </Grid.GestureRecognizers>
                            </Grid>

               
                      

                    </DataTemplate>

                </syncfusion:SfListView.ItemTemplate>




                <syncfusion:SfListView.ItemsLayout>
                    <syncfusion:GridLayout SpanCount="4"/>
                </syncfusion:SfListView.ItemsLayout>
            </syncfusion:SfListView>

     
        </DataTemplate>
        
        
        
        
        
        
        
        <DataTemplate x:Key="MultiModificationDetail"  x:DataType="models:SelectedModifiers">
            <Grid RowDefinitions="25,*"   >
                <Label  Text="{Binding ModifierId.Name,Mode=OneWay}" FontSize="15" FontAttributes="Bold" Opacity="0.6" />
                <l:HorizontalWrapLayout Grid.Row="1"  BindableLayout.ItemsSource="{Binding SelectedGoodsId,Mode=OneWay}" Spacing="10" Margin="10,0"  >
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="models:Goods">
                            <Border>
                                <Grid RowDefinitions="110,60,10"   WidthRequest="150">
                                    <Image Grid.RowSpan="3" Source="{Binding  Picture,  Converter={helpers:ImageSourceConverter},Mode=OneWay}"
                          Aspect="AspectFill" />
                                    <BoxView  Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#70000000"/>
                                    <BoxView    BackgroundColor="#70000000" IsVisible="{Binding Amount,Mode=OneWay}"/>
                                    <Border BackgroundColor="Red" HeightRequest="30" WidthRequest="30"  VerticalOptions="Start" HorizontalOptions="End" Margin="4"
                                      IsVisible="{Binding Amount,Mode=OneWay}">
                                        <Border.StrokeShape>
                                            <RoundRectangle CornerRadius="15" />
                                        </Border.StrokeShape>
                                        <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" FontSize="20"  TextColor="White" HorizontalOptions="Center" VerticalOptions="Center"/>
                                        <Border.GestureRecognizers>
                                            <TapGestureRecognizer  Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=ClearDetailCommand}"
                                                            CommandParameter="{Binding .}"/>
                                        </Border.GestureRecognizers>
                                    </Border>
                                    <Label Text="{Binding Amount,Mode=OneWay}" IsVisible="{Binding Amount,Mode=OneWay}" VerticalOptions="Center" HorizontalOptions="Center"
                                     FontSize="30" FontAttributes="Bold" TranslationY="20"  
                                   TextColor="{AppThemeBinding Dark={StaticResource TextColorDark},Light={StaticResource White}}"/>
                                    <Label Grid.Row="1" x:Name="TextLabel" Text="{Binding  Name,Mode=OneWay}" FontSize="16" FontAttributes="Bold"
                              LineBreakMode="TailTruncation" Margin="5" TextColor="White" />

                                    <Label x:Name="PriceText" Grid.Row="1" TextColor="White"  FontSize="20"  VerticalOptions="EndAndExpand" HorizontalOptions="Center" >
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding Price,Mode=OneWay}" FontAttributes="Bold"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency,Mode=OneWay }"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>


                                    <BoxView x:Name="Indicator" Grid.Row="2" BackgroundColor="Transparent"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer   Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IncrementDetailCommand}"
                                                            CommandParameter="{Binding .}"/>
                                    </Grid.GestureRecognizers>
                                </Grid>
                            </Border>

                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </l:HorizontalWrapLayout>
            </Grid>
        </DataTemplate>
        
        
        
        <helpers:ModificationDataTemplateSelector x:Key="ModificationDataTemplateSelector"
                                                  SinglTemplate="{StaticResource SinnglModification}"
                                                  MultiTemplate="{StaticResource MultiModification}"/>

        <helpers:ModificationDataTemplateSelector x:Key="DetailModificationDataTemplateSelector"
                                               SinglTemplate="{StaticResource SinnglModificationDetail}"
                                               MultiTemplate="{StaticResource MultiModificationDetail}"/>
    </ContentView.Resources>

    <ContentView.Content>
        <Grid RowDefinitions="50,*" >
            <!-- custom nawbar -->
            <Grid BackgroundColor="{StaticResource NawBarBackgroundColor}" Padding="20,0" ColumnDefinitions="120,80,auto,auto,*">

                <HorizontalStackLayout VerticalOptions="CenterAndExpand" HorizontalOptions="Start" >
                    <Label FontAttributes="Bold" FontSize="Subtitle" FontFamily="FAS" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="White" Text="{x:Static fa:FontAwesomeIcons.ChevronLeft}" />
                    <Label FontAttributes="Bold" FontSize="Subtitle" Margin="5,0" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="White" Text="{x:Static res:AppResources.Back}" />
                    <HorizontalStackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding BackCommand}" />
                    </HorizontalStackLayout.GestureRecognizers>
                </HorizontalStackLayout>


                <Border Grid.Column="1"  Margin="0,5,0,0"  Stroke="Transparent" StrokeShape="RoundRectangle 8 8 0 0" Padding="20,10"    >
                    <Label  Text="{x:Static res:AppResources.Receipt}" FontAttributes="Bold"  FontSize="18" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"  Opacity=".6" >
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsReceipt,Mode=OneWay}" Value="true" >
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                            <DataTrigger TargetType="Label" Binding="{Binding IsReceipt,Mode=OneWay}" Value="false" >
                                <Setter Property="TextColor" Value="White" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>


                    <Border.Triggers>
                        <DataTrigger TargetType="Border" Binding="{Binding IsReceipt,Mode=OneWay}" Value="false" >
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </DataTrigger>
                    </Border.Triggers>

                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding SelectedOrderTypeCommand}" CommandParameter="IsReceipt"/>
                    </Border.GestureRecognizers>
                </Border>


                <Border Grid.Column="2" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}"   Margin="0,5,0,0"  Stroke="Transparent" StrokeShape="RoundRectangle 8 8 0 0" Padding="20,10"  >
                    <Label  Text="{x:Static res:AppResources.Client}" FontAttributes="Bold"  FontSize="18" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Opacity=".6" >
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsClient,Mode=OneWay}" Value="true" >
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                            <DataTrigger TargetType="Label" Binding="{Binding IsClient,Mode=OneWay}" Value="false" >
                                <Setter Property="TextColor" Value="White" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Border.Triggers>
                        <DataTrigger TargetType="Border" Binding="{Binding IsClient,Mode=OneWay}" Value="false" >
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </DataTrigger>
                    </Border.Triggers>

                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding SelectedOrderTypeCommand}" CommandParameter="IsClient"/>
                    </Border.GestureRecognizers>
                </Border>


                <Border Grid.Column="3" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}"  Margin="0,5,0,0" StrokeThickness="-1" Stroke="Transparent" StrokeShape="RoundRectangle 8 8 0 0" Padding="20,10"  >
                    <Label  Text="{Binding Title}" FontAttributes="Bold"  FontSize="18"  HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Opacity="0.6" >


                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsDelivery,Mode=OneWay}" Value="true" >
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                            <DataTrigger TargetType="Label" Binding="{Binding IsDelivery,Mode=OneWay}" Value="false" >
                                <Setter Property="TextColor" Value="White" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Border.Triggers>
                        <DataTrigger TargetType="Border" Binding="{Binding IsDelivery,Mode=OneWay}" Value="false" >
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </DataTrigger>

                        <DataTrigger TargetType="Border" Binding="{Binding Order.Detail.OrderTypeRaw,Mode=OneWay}" Value="1" >
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </Border.Triggers>
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding SelectedOrderTypeCommand}" CommandParameter="IsDelivery"/>
                    </Border.GestureRecognizers>

                </Border>



                <StackLayout Grid.ColumnSpan="5"   HorizontalOptions="Center" VerticalOptions="Center"  BackgroundColor="Transparent" >
                    <HorizontalStackLayout VerticalOptions="Start" HorizontalOptions="CenterAndExpand">
                        <Label FontAttributes="Bold" FontSize="Subtitle" Margin="5,0" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="White" Text="{x:Static res:AppResources.Tables}" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{x:Static res:AppResources.ReceiptNumber}" />
                                    <Span Text="{Binding Order.Number}" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label FontAttributes="Bold" FontSize="Subtitle" FontFamily="FAS" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="White" Text="{x:Static fa:FontAwesomeIcons.ChevronDown}" >
                            <!--<Label.Triggers>
                         <DataTrigger TargetType="Label" Binding="{Binding Order.OrderTypeRaw}" Value="OutRestoran" >
                             <Setter Property="IsVisible" Value="false"/>
                         </DataTrigger>
                         <DataTrigger TargetType="Label" Binding="{Binding Order.OrderTypeRaw,Mode=OneWay}" Value="Delivered" >
                             <Setter Property="IsVisible" Value="false"/>
                         </DataTrigger>
                     </Label.Triggers>-->
                        </Label>
                        <HorizontalStackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding OrderListCommand}" />
                        </HorizontalStackLayout.GestureRecognizers>
                    </HorizontalStackLayout>
                    <Label   FontAttributes="None"  FontSize="16" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource UnSelektTabTextColor}" >
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding Order.Name,Mode=OneWay}" />

                            </FormattedString>
                        </Label.FormattedText>
                        <!--<Label.Triggers>
                     <DataTrigger TargetType="Label" Binding="{Binding Order.OrderTypeRaw,Mode=OneWay}" Value="OutRestoran" >
                         <Setter Property="Text" Value="{x:Static res:AppResources.Takeout}"/>
                     </DataTrigger>
                     <DataTrigger TargetType="Label" Binding="{Binding Order.OrderTypeRaw,Mode=OneWay}" Value="Delivered" >
                         <Setter Property="Text" Value="{x:Static res:AppResources.Delivery}"/>
                     </DataTrigger>
                 </Label.Triggers>-->
                    </Label>

                </StackLayout>


                <HorizontalStackLayout Grid.Column="4" HorizontalOptions="End" >
                    <Border  Padding="0" BackgroundColor="Transparent">
                        <Label  Text="{x:Static fa:FontAwesomeIcons.Bell}" FontFamily="FAS" FontAttributes="Bold" FontSize="Subtitle" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource UnSelektTabTextColor}" />
                    </Border>
                    <BoxView WidthRequest="1"  Margin="10,0" Opacity="0.5" BackgroundColor="{StaticResource UnSelektTabTextColor}"   />
                    <Border  Padding="0" BackgroundColor="Transparent">
                        <Label  Text="{x:Static fa:FontAwesomeIcons.Bars}" FontFamily="FAS" FontAttributes="Bold" FontSize="Title" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource UnSelektTabTextColor}" />

                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Homepage.FunctionalMenuOpenCommand}"/>
                        </Border.GestureRecognizers>
                    </Border>
                    <BoxView WidthRequest="1"  Margin="10,0" Opacity="0.5" BackgroundColor="{StaticResource UnSelektTabTextColor}"   />
                    <Border  Padding="0" BackgroundColor="Transparent">
                        <Label Text="{Binding Homepage.CurrentLang, Mode=OneWay}"  FontAttributes="Bold" FontSize="Subtitle" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource UnSelektTabTextColor}" />

                        <Border.GestureRecognizers>
                            <TapGestureRecognizer   Command="{Binding Homepage.LanguageChangeCommand}" CommandParameter="Border"/>
                        </Border.GestureRecognizers>
                    </Border>
                    <BoxView WidthRequest="1"  Margin="10,0" Opacity="0.5" BackgroundColor="{StaticResource UnSelektTabTextColor}"   />
                    <Border  Padding="0" BackgroundColor="Transparent">
                        <Label    FontAttributes="Bold" FontSize="Subtitle" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource UnSelektTabTextColor}" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Homepage.CurrentUser.FullName,Mode=OneWay}" />
                                    <Span Text="   " />
                                    <Span Text="{x:Static fa:FontAwesomeIcons.ArrowRightFromBracket}" FontFamily="FAS" />

                                </FormattedString>
                            </Label.FormattedText>
                        </Label>

                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Homepage.ChangeUserCommand}" />
                        </Border.GestureRecognizers>
                    </Border>

                    <Border  Padding="0" BackgroundColor="Transparent" Margin="25,0,0,0">
                        <Label  Text="{x:Static fa:FontAwesomeIcons.Globe}" FontFamily="FAS" FontAttributes="Bold" FontSize="Subtitle" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource GreenButton}" >
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding Homepage.IsInternet,Mode=OneWay}" Value="False">
                                    <Setter Property="TextColor" Value="{StaticResource RedButton}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </Border>
                </HorizontalStackLayout>


            </Grid>
            <!-- custom nawbar -->
       
            <!-- Основной контент -->
            <Grid Grid.Row="1"  ColumnDefinitions=".6*,*" IsVisible="{Binding IsReceipt,Mode=OneWay}" >

                <Grid RowDefinitions="40,*,18,auto" Padding="5,0,5,10" BackgroundColor="{AppThemeBinding Dark={StaticResource HeaderBarBackgroundColorDark},Light={StaticResource HeaderBarBackgroundColorLight}}">
                    
                    <Grid Padding="0,10" ColumnSpacing="5"  ColumnDefinitions="*,160,100" IsVisible="{Binding IsReceipt,Mode=OneWay}">

                        <Label Text="{x:Static res:AppResources.Name}" FontAttributes="Bold"  FontSize="12" />
                        <Label Grid.Column="1" Text="{x:Static res:AppResources.Quantity}" FontAttributes="Bold" HorizontalTextAlignment="Center" FontSize="12" />
                        <Label Grid.Column="2" Text="{x:Static res:AppResources.Price}" FontAttributes="Bold" HorizontalOptions="EndAndExpand" Margin="15,0"  FontSize="12" />
                        <!--<Label Grid.Column="3" Text="{x:Static res:AppResources.Total}" FontAttributes="Bold" HorizontalOptions="End" FontSize="12" />-->

                    </Grid>

                    <CollectionView x:Name="OrderItemList" Grid.Row="1" IsVisible="{Binding IsReceipt,Mode=OneWay}" 
                                           ItemsSource="{Binding GuestGroups, Mode=OneWay}"
                                       ItemTemplate="{StaticResource ClientOrGuestProductTemplate}" 
                                       SelectionMode="Single"
                                       IsGrouped="True"
                                     
                                       SelectionChangedCommand="{Binding OpenOrderDetailCommand}" SelectionChangedCommandParameter="{Binding .}"  SelectedItem="{Binding CurrentOrderSale, Mode=TwoWay}" >
                        <CollectionView.GroupHeaderTemplate>
                            <DataTemplate x:DataType="{x:Null}" >
                                <StackLayout Orientation="Horizontal" >
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout" Binding="{Binding IsSelected,Mode=OneWay}" Value="True">
                                            <Setter Property="BackgroundColor" Value="{StaticResource Gray100}" />
                                        </DataTrigger>
                                    </StackLayout.Triggers>

                                    <Label  VerticalOptions="Center" FontAttributes="Bold" TextColor="{StaticResource Primary}"
                                            FontSize="{OnPlatform iOS=Subtitle, Android=Medium, WinUI=20}" >

                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{x:Static res:AppResources.Guest}"/>
                                                <Span Text=" "/>
                                                <Span Text="{Binding GroupIndex,Mode=OneWay}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>




                                    <!--IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=IsOrderPayed, Mode=OneWay, Converter={StaticResource InvertedConverter}}"-->

                                   
                                    <Label  VerticalOptions="Center"  Margin="20,5" FontSize="{OnPlatform iOS=Subtitle, Android=Medium}" IsVisible="{Binding IsSelected,Mode=OneWay}"
                                        IsEnabled="{Binding IsOrderPayed,Mode=OneWay, Converter={StaticResource InvertedConverter}}"
                                            TextColor="{StaticResource Primary}"
                                            FontFamily="FAS" Text="{x:Static fa:FontAwesomeIcons.Trash}">

                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=DeleteGuestCommand}"
                                                                  CommandParameter="{Binding .}"/>
                                        </Label.GestureRecognizers>
                                        
                                    </Label>



                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer  Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SelectedGuestOrClientCommand}" CommandParameter="{Binding .}" />
                                    </StackLayout.GestureRecognizers>
                                </StackLayout>
                            </DataTemplate>
                        </CollectionView.GroupHeaderTemplate>



                     
                    </CollectionView>


                    <HorizontalStackLayout Grid.Row="2"   Spacing="10"  Grid.Column="1">
                        <HorizontalStackLayout.IsVisible>
                            <MultiBinding Converter="{StaticResource VariableMultiValueConverter}">
                                <Binding Path="IsReceipt" Mode="OneWay" />
                                <Binding Path="IsOrderPayed" Converter="{StaticResource InvertedConverter}" Mode="OneWay" />

                            </MultiBinding>
                        </HorizontalStackLayout.IsVisible>
                        <Label Grid.Column="2" TextColor="{StaticResource Primary}" Text="{x:Static fa:FontAwesomeIcons.User}" VerticalTextAlignment="Center" FontFamily="FAR" FontAttributes="Bold"  FontSize="15" />
                        <Label Grid.Column="2" TextColor="{StaticResource Primary}" Text="{x:Static res:AppResources.AddGuest}" FontAttributes="Bold" VerticalTextAlignment="Center" FontSize="15" />
                        <!--<Label Grid.Column="2" Text="{x:Static fa:FontAwesomeIcons.Plus}" FontFamily="FAS" FontAttributes="None"  FontSize="16" />-->

                        <HorizontalStackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding AddGuestCommand}"></TapGestureRecognizer>
                        </HorizontalStackLayout.GestureRecognizers>
                    </HorizontalStackLayout>

                    <Grid Grid.Row="3" Padding="0,10,0,0" RowSpacing="10"  ColumnSpacing="15"  ColumnDefinitions="auto,auto,*,auto" RowDefinitions="auto,auto,auto">
                        

                        <Label Grid.Column="0" IsVisible="{Binding Order.OrderDiscountTotal,Mode=OneWay}" Grid.ColumnSpan="2"  Text="{x:Static res:AppResources.Discount}"  VerticalTextAlignment="Center" FontSize="14" />
                        <Label Grid.Column="3" IsVisible="{Binding Order.OrderDiscountTotal,Mode=OneWay}" HorizontalTextAlignment="End" VerticalTextAlignment="Center" FontSize="14" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Order.OrderDiscountTotal,Mode=OneWay}" />
                                    <Span Text=" " />
                                    <Span Text="{Binding Homepage.Currency,Mode=OneWay}" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>

                        <Label Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="2"  Text="{x:Static res:AppResources.TotalToPay}" FontAttributes="Bold" VerticalTextAlignment="Center" FontSize="16" IsVisible="{Binding IsOrderPayed, Mode=OneWay, Converter={StaticResource InvertedConverter}}"/>

                        <Label Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="2"  Text="{x:Static res:AppResources.PaidLabel}" FontAttributes="Bold" VerticalTextAlignment="Center" FontSize="16" IsVisible="{Binding IsOrderPayed, Mode=OneWay}"/>
                        <Label Grid.Row="1"  Grid.Column="3" FontAttributes="Bold" HorizontalTextAlignment="End" VerticalTextAlignment="Center" FontSize="16" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Order.OrderReceipt.ResultSum,Mode=OneWay}" />
                                    <Span Text=" " />
                                    <Span Text="{Binding Homepage.Currency,Mode=OneWay}" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>

                        <Button   Grid.Row="2" FontFamily="FAS" FontSize="Subtitle" Text="{x:Static fa:FontAwesomeIcons.Ellipsis}" BackgroundColor="Transparent"  VerticalOptions="Center" HorizontalOptions="Start"  FontAttributes="None" Padding="15,5"  TextTransform="None" BorderWidth="1.5"  BorderColor="{AppThemeBinding Dark={StaticResource TextColorDark},Light={StaticResource TextColorLight}}" TextColor="{AppThemeBinding Dark={StaticResource TextColorDark},Light={StaticResource TextColorLight}}" Command="{Binding OpenExtraFunctionsCommand}" CommandParameter="Border"  IsVisible="{Binding IsOrderPayed, Mode=OneWay, Converter={StaticResource InvertedConverter}}"/>
                        <Button  Grid.Row="2" Grid.Column="1" FontFamily="FAS" FontSize="Subtitle" Text="{x:Static fa:FontAwesomeIcons.Print}"
                                 BackgroundColor="Transparent" VerticalOptions="Center" HorizontalOptions="Start"  FontAttributes="None" Padding="15,5"
                                 TextTransform="None" BorderWidth="1.5"  BorderColor="{AppThemeBinding Dark={StaticResource TextColorDark},Light={StaticResource TextColorLight}}"
                                 TextColor="{AppThemeBinding Dark={StaticResource TextColorDark},Light={StaticResource TextColorLight}}" 
                                 
                                 Command="{Binding PrintCommand}"/>


                        <Button  Grid.Row="2" Grid.Column="3"  FontSize="Subtitle" Text="{x:Static res:AppResources.Pay}" BackgroundColor="{StaticResource GreenButton}"  IsVisible="{Binding IsOrderPayed, Mode=OneWay, Converter={StaticResource InvertedConverter}}"
                BorderColor="Transparent" VerticalOptions="Center" HorizontalOptions="End"  FontAttributes="Bold" Padding="45,10"  TextTransform="None" BorderWidth="1.5"   Command="{Binding GoToPayPageCommand}" />



                        <Button  Grid.Row="2" Grid.Column="2"  FontSize="Subtitle" Text="Разделить заказ" BackgroundColor="{StaticResource GreenButton}" IsVisible="{Binding IsSplitOrder,Mode=OneWay}"
   BorderColor="Transparent" VerticalOptions="Center" HorizontalOptions="Fill"  FontAttributes="Bold" Padding="45,10"  TextTransform="None" BorderWidth="1.5"   Command="{Binding SplitOrderCommand}" />

                    </Grid>

                </Grid>




                <syncfusion:SfListView  x:Name="itemListView"  ItemSpacing="5"   Grid.Column="1" Margin="10,90,10,5" ItemsSource="{Binding Menu.Items, Mode=OneWay}" ItemTemplate="{StaticResource ItemTemplate}" 
                                       ItemSize="{OnPlatform iOS=260,Android=260,WinUI=280}"  IsVisible="{Binding IsItems,Mode=OneWay}"  AutoFitMode="DynamicHeight">

                    <syncfusion:SfListView.ItemsLayout>
                        <syncfusion:GridLayout SpanCount="4"  ></syncfusion:GridLayout>
                    </syncfusion:SfListView.ItemsLayout>
                    
                    <!--<SfListView.ItemsLayout >
                        <GridItemsLayout Span="4" Orientation="Vertical"  VerticalItemSpacing="5" HorizontalItemSpacing="5"  />
                    </SfListView.ItemsLayout>-->
                </syncfusion:SfListView>
            

                <Grid Grid.Column="1" BackgroundColor="{StaticResource TransperentDark}" >

                    <Grid.IsVisible>
                        <MultiBinding Converter="{StaticResource VariableMultiValueConverter}" Mode="OneWay">

                            <Binding Path="IsOrderPayed"  Mode="OneWay" />
                            <!--<Binding Path="IsPredCheck"  Mode="OneWay" />-->

                        </MultiBinding>
                    </Grid.IsVisible>
                    <Label  Margin="10,80,10,5" Text="{x:Static res:AppResources.OrderIsPaid}" FontSize="32" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding IsOrderPayed, Mode=OneWay}" TextColor="White">
                    </Label>

                    <!--<Label  Margin="10,80,10,5" Text="Заказ находится в состоянии предчека" FontSize="32" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding IsPredCheck, Mode=OneWay}" TextColor="White">
                    </Label>-->

                </Grid>


                <Grid Grid.Column="1" Padding="20" VerticalOptions="Start"  ColumnDefinitions="*,auto,auto" ColumnSpacing="15">
                        <HorizontalStackLayout VerticalOptions="Center" Spacing="10">
                            <Label Text="{x:Static fa:FontAwesomeIcons.ChevronLeft}" FontFamily="FAS" VerticalTextAlignment="Center" FontAttributes="Bold" FontSize="18" TextColor="{StaticResource Primary}" >
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding CategoryTitle}" Value="{x:Static res:AppResources.AllProducts}">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Label Text="{Binding CategoryTitle}" VerticalTextAlignment="Center" FontAttributes="Bold" FontSize="18"  />
                            <HorizontalStackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding GoToPreviousCategoryCommand}" />
                            </HorizontalStackLayout.GestureRecognizers>
                        </HorizontalStackLayout>
                        <Border Grid.Column="1" HorizontalOptions="End" HeightRequest="45" VerticalOptions="Start" Padding="5,0" >
                            <Grid >
                                <Entry Placeholder="{x:Static res:AppResources.EnterText}" Text="{Binding SearchTextProducts}" FontSize="16" WidthRequest="200" VerticalTextAlignment="Center" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" />
                                <Label Text="{x:Static fa:FontAwesomeIcons.MagnifyingGlass}" FontFamily="FAS" FontSize="16" VerticalTextAlignment="Center" HorizontalOptions="End" Margin="20,0"/>
                            </Grid>
                        </Border>
                        <Border Grid.Column="2" HorizontalOptions="End" HeightRequest="45" VerticalOptions="Start" Padding="10,14" >
                            <Label Text="{x:Static fa:FontAwesomeIcons.Barcode}" FontFamily="FAS" FontSize="Subtitle" VerticalTextAlignment="Center" HorizontalOptions="End" Margin="20,0"/>

                        </Border>    
                        <!--<Border Grid.Column="3" HorizontalOptions="Center" HeightRequest="45" VerticalOptions="Start" Padding="10,14" >
                            <StackLayout Orientation="Horizontal" >
                                <Label Text="{x:Static res:AppResources.Promotions}" VerticalTextAlignment="Center" FontSize ="Subtitle"  HorizontalTextAlignment="Center" />
                                <Label Text="{Binding PromotionCount}" FontFamily="FAS" FontSize="Small" VerticalTextAlignment="End" HorizontalOptions="End" Margin="20,0"  IsVisible="{Binding IsPromotionCount}"/>

                            </StackLayout>
                     
                        </Border>-->


                    <buttons:SfButton  Grid.Column="3" HorizontalOptions="FillAndExpand" HeightRequest="45" MaximumWidthRequest="180"  Padding="10,14" StrokeThickness="0" CornerRadius="8"
                     HorizontalTextAlignment="Center" VerticalTextAlignment="Center"  TextColor="Black" Command="{Binding OpenOrClosePromotionCommand}"  >
                        <buttons:SfButton.Content>
                            <DataTemplate>


                                <controll:ButtonTemplate  BackgroundColor="{AppThemeBinding Dark={StaticResource HeaderBarBackgroundColorDark},Light={StaticResource HeaderBarBackgroundColorLight}}"
                                         Title="{x:Static res:AppResources.Promotions}"
                                         Counter="{Binding  PromotionCount,Mode=TwoWay}" IsCounterVisible="{Binding IsPromotionCount, Mode=TwoWay}"   >

                                </controll:ButtonTemplate>
                            </DataTemplate>
                        </buttons:SfButton.Content>
                    </buttons:SfButton>


                </Grid>



               





                <!-- Детали продукта -->
                        <Grid Grid.Column="1" RowDefinitions="40,*,auto" Padding="20"  RowSpacing="10" BackgroundColor="{AppThemeBinding Dark={StaticResource HeaderBarBackgroundColorDark},Light={StaticResource HeaderBarBackgroundColorLight}}" IsVisible="{Binding IsOpenOrderDetail}">
                            <VerticalStackLayout>
                                <HorizontalStackLayout  Margin="10,0,10,10" VerticalOptions="CenterAndExpand" HorizontalOptions="Start"  >
                                    <Label FontAttributes="Bold" FontSize="Subtitle" FontFamily="FAS" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource Primary}" Text="{x:Static fa:FontAwesomeIcons.ChevronLeft}" />
                                    <Label FontAttributes="Bold" FontSize="Subtitle" Margin="5,0" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" TextColor="{StaticResource Primary}" Text="{x:Static res:AppResources.Back}" />  
                                
                                
                                    <HorizontalStackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding CloseOrderDetailCommand}" />
                                    </HorizontalStackLayout.GestureRecognizers>
                                
                                </HorizontalStackLayout>
                                <BoxView HeightRequest="1"  VerticalOptions="End" />
                            </VerticalStackLayout>
                       
                            <ScrollView IsVisible="{Binding CurrentOrderSale.ModifierGoods.Count}" Grid.Row="1" Padding="5" >
                                <CollectionView ItemsSource="{Binding CurrentOrderSale.ModifierGoods,Mode=OneWay}" ItemTemplate="{StaticResource DetailModificationDataTemplateSelector}">

                                </CollectionView>
                            </ScrollView>
                            <StackLayout  Grid.Row="2" Spacing="5" >
                        <BoxView HeightRequest="1"  VerticalOptions="End" />
                        <Label Text="{x:Static res:AppResources.Commentary}" Grid.Row="0" HorizontalOptions="Start" VerticalOptions="End" Margin="20,0,0,0"> </Label>
                                <Border  BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}"   Grid.Row="1"  HorizontalOptions="Fill" >
                            <Entry Opacity="1"  Text="{Binding CommentText}"  Placeholder="{x:Static res:AppResources.EnterAComment}" HorizontalTextAlignment="Center" VerticalOptions="Center"  >

                                    </Entry>
                                </Border>

                        <Button Text="{x:Static res:AppResources.ConfirmLabel}" Margin="15" FontAttributes="Bold" HorizontalOptions="Center"   Padding="40,10"  Command="{Binding SaveCommentCommand}" CommandParameter="succeful" />

                    </StackLayout>

                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding }"/>
                    </Grid.GestureRecognizers>
                        
                        </Grid>
                <!-- Детали продукта -->
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding }"/>
                </Grid.GestureRecognizers>
            </Grid>
            <!-- Основной контент -->

            <!-- Акции -->
            <Grid Grid.RowSpan="2" Background="{StaticResource TransperentDark}" Padding="40" IsVisible="{Binding IsOpenPromotion,Mode=OneWay}"  >
                <Border MaximumHeightRequest="550" MaximumWidthRequest="800"  VerticalOptions="Fill" HorizontalOptions="Center" >
                    <Grid RowDefinitions="50,*">
                        <Label Text="{x:Static res:AppResources.Promotions}" FontSize="16" VerticalOptions="Center" HorizontalOptions="Center" />
                        <Border HorizontalOptions="End" Opacity="0.6" Padding="20,15">
                            <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" FontSize="Subtitle" VerticalOptions="Center" HorizontalOptions="Center" />


                            <Border.GestureRecognizers>

                                <TapGestureRecognizer Command="{Binding OpenOrClosePromotionCommand}"/>
                            </Border.GestureRecognizers>
                        </Border>

                        <ScrollView Grid.Row="1" Padding="20" BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundColorLight}, Dark={StaticResource BackgroundColorDark}}" >
                           <CollectionView  ItemsSource="{Binding Promotions, Mode=OneWay}" ItemTemplate="{StaticResource PromotionTemplate}"   >
                                <CollectionView.ItemsLayout>
                                    <GridItemsLayout Orientation="Vertical" Span="4" VerticalItemSpacing="15" HorizontalItemSpacing="15" />
                                </CollectionView.ItemsLayout>
                            </CollectionView>
                        </ScrollView>

                        

                        
                    </Grid>
                </Border>
            </Grid>
            <!-- Акции -->

            <!-- Клинт -->
            <StackLayout Grid.Row="1" Orientation="Horizontal" IsVisible="{Binding IsClient,Mode=OneWay}" Padding="20" Spacing="10"  >

                <StackLayout Spacing="15" MaximumWidthRequest="400" Margin="0,0,20,40"  >
                    <Border  VerticalOptions="Start" Padding="5,0" >
                        <Grid >
                            <Entry Placeholder="{x:Static res:AppResources.EnterText}" Text="{Binding SearchTextClient,Mode=TwoWay}" FontSize="16"  VerticalTextAlignment="Center" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" />
                            <Label Text="{x:Static fa:FontAwesomeIcons.MagnifyingGlass}" FontFamily="FAS" FontSize="16" VerticalTextAlignment="Center" HorizontalOptions="End" Margin="20,0"/>
                        </Grid>
                    </Border>
                    <Button Text="{x:Static res:AppResources.NewClient}" FontAttributes="Bold" FontSize="18" TextTransform="None" Command="{Binding AddNewClientCommand}" CommandParameter="open"/>
                    <CollectionView Margin="-20,0,0,0"  Grid.Row="1"  IsVisible="{Binding IsClient}" ItemsSource="{Binding VisualClients, Mode=OneWay}" SelectedItem="{Binding CurrentClient,Mode=TwoWay}"  ItemTemplate="{StaticResource ClientTemplate}"
                       SelectionMode="Single" SelectionChangedCommand="{Binding AddClientToOrderCommand}"   SelectionChangedCommandParameter="{Binding SelectedItem, Source={RelativeSource Self},Mode=TwoWay}" >
                    </CollectionView>
                </StackLayout>


                <!--боковое меню с отображением данных о выбранном клиенте-->
             
             
                <ScrollView HorizontalOptions="FillAndExpand"    >
                    <StackLayout Spacing="15">
                        <Border VerticalOptions="Start" Padding="20,30" >
                            <StackLayout Spacing="15" >
                                <StackLayout Orientation="Horizontal">
                                    <Label Text="{Binding CurrentClient.FullName , Mode=OneWay}" VerticalOptions="Start" FontSize="Title"  />
                                    <Button Text="{x:Static res:AppResources.Untie}" FontAttributes="Bold" FontSize="18" HorizontalOptions="EndAndExpand" TextTransform="None" Command="{Binding UnlinkClientCommand}" />
                                </StackLayout>
                                <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                    <StackLayout Spacing="10">
                                        <Label Text="{x:Static res:AppResources.ClientGroup}" />
                                        <Label VerticalOptions="Start" FontSize="Subtitle"  >
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="" />
                                                    <Span Text="" />
                                                    <Span Text="{x:Static res:AppResources.Bonuses}"  />
                                                    <Span Text=" - " />
                                                    <Span Text="{Binding CurrentClient.ClientGroup.Value}"   />
                                                    <Span Text=" %"   />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                    </StackLayout>
                                </Border>
                                <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                    <StackLayout Spacing="10">
                                        <Label Text="{x:Static res:AppResources.CardNumber}" />
                                        <Picker x:DataType="models:ClientCard" Title="{x:Static res:AppResources.SelectedCard}" ItemsSource="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}},Path=CurrentClient.ClientCard, Mode=OneWay }" FontSize="Subtitle"   ItemDisplayBinding="{Binding CardNumber , Mode=OneWay}"
                                            >


                                        </Picker>

                                    </StackLayout>
                                </Border>
                            </StackLayout>
                        </Border>
                        <Border VerticalOptions="Start" HorizontalOptions="FillAndExpand" Padding="20,30" >
                            <StackLayout Spacing="15" >

                                <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                    <StackLayout Spacing="10">
                                        <Label Text="{x:Static res:AppResources.ClientBalance}" />
                                        <Label  VerticalOptions="Start" FontSize="Subtitle"  >

                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="{Binding CurrentClient.DepositsSum}"/>
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Homepage.Currency}"/>
                                                </FormattedString>
                                            </Label.FormattedText>

                                        </Label>
                                    </StackLayout>
                                </Border>
                                <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                    <StackLayout Spacing="10">
                                        <Label Text="{x:Static res:AppResources.SalesSum}" />
                                        <Label Text="{Binding CurrentClient.TotalClientsSum}" VerticalOptions="Start" FontSize="Subtitle" >

                                        </Label>
                                    </StackLayout>
                                </Border>
                            </StackLayout>
                        </Border>
                    </StackLayout>
                    <ScrollView.Triggers>
                        <DataTrigger TargetType="ScrollView" Binding="{Binding CurrentClient,Mode=OneWay, TargetNullValue=''}" Value="" >
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </ScrollView.Triggers>
                </ScrollView>

                    <!--конец-->

            </StackLayout>
            <!-- Клинт -->  

            <!-- доставка / на вынос -->
            <ScrollView Grid.Row="1" Padding="20,25" IsVisible="{Binding IsDeliveryOrder,Mode=OneWay}">

                <StackLayout HorizontalOptions="Center" MinimumWidthRequest="600" Spacing="20" >
                    <Border  Padding="20,25"  >
                        <!--IsdeliveryVisible-->
                        <StackLayout Spacing="15" >
                            <StackLayout Orientation="Horizontal">
                                <Label Text="{x:Static res:AppResources.DeliveryAddress}" VerticalOptions="Start" FontSize="Title"  />
                                <Label Text="{x:Static fa:FontAwesomeIcons.MapLocationDot}" FontFamily="FAS" TextColor="{StaticResource Primary}" FontAttributes="Bold" FontSize="Title" HorizontalOptions="EndAndExpand" />
                            </StackLayout>
                            <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                <StackLayout Spacing="10">
                                    <Label Text="{x:Static res:AppResources.DeliveryAddress}" />
                                    <Entry Text="{Binding Order.OrderDelivery.Address.Address,Mode=OneWay}" Placeholder=""  FontSize="Subtitle"  />
                                </StackLayout>
                            </Border>
                            <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                <StackLayout Spacing="10">
                                    <Label Text="{x:Static res:AppResources.DeliveryZone}" />
                                    <Picker Title="{x:Static res:AppResources.DeliveryZone}"  FontSize="Subtitle" SelectedItem="{Binding Order.OrderDelivery.DeliveryZone}"  
                                            ItemsSource="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}},Path=DeliveryZones }" 
                                            ItemDisplayBinding="{Binding Name}">
                                    
                                      
                                    </Picker>
                                </StackLayout>
                            </Border>
                            <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                <StackLayout Spacing="10">
                                    <Label Text="{x:Static res:AppResources.AdditionalyDelivery} " />
                                    <Entry Text="{Binding Order.OrderDelivery.Address.Description, Mode=OneWay}" Placeholder="{x:Static res:AppResources.entrance}"  FontSize="Subtitle"  />
                                </StackLayout>
                            </Border>
                            <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                                <StackLayout Spacing="10">
                                    <Label Text="{x:Static res:AppResources.Commentary}" />
                                    <Entry Text="{Binding Order.OrderDelivery.Description,Mode=OneWay}" Placeholder="{x:Static res:AppResources.WriteCommentLabel}"  FontSize="Subtitle"  />
                                </StackLayout>
                            </Border>
                        </StackLayout>
                    </Border>

                    <Border  Padding="20,25" >
                        <StackLayout Spacing="15" >
                            <StackLayout Orientation="Horizontal">
                                <Label Text="{x:Static res:AppResources.DeliveryDetail}" VerticalOptions="Start" FontSize="Title"  >
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding IsDelivery,Mode=OneWay}" Value="False">
                                            <Setter Property="Text" Value="{x:Static res:AppResources.TakeAway}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <Label Text="{x:Static fa:FontAwesomeIcons.TruckRampBox}" FontFamily="FAS" TextColor="{StaticResource Primary}" FontAttributes="Bold" FontSize="Title" HorizontalOptions="EndAndExpand" >
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding IsDelivery,Mode=OneWay}" Value="False">
                                            <Setter Property="Text" Value="{x:Static fa:FontAwesomeIcons.CubesStacked}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Spacing="10">
                                <Label Text="{x:Static res:AppResources.Standard}" />
                                <BoxView HeightRequest="1" HorizontalOptions="FillAndExpand" VerticalOptions="End" />
                                <Label >
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Order.OrderDelivery.DeliveryZone.ServiceStandardTime,Mode=OneWay}"/>
                                            <Span Text="  "/>
                                            <Span Text="{x:Static res:AppResources.minutes}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <!--Text="{Binding Order.OrderDelivery.StandardTime}"-->
                            </StackLayout>
                            <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}"  >
                                <StackLayout Spacing="10">
                                    <Label Text="{x:Static res:AppResources.DeliveryTime}" />
                                    <StackLayout Orientation="Horizontal" Spacing="15">
                                        <DatePicker Format="dd MMMM yyyy" HorizontalOptions="FillAndExpand"  FontSize="Subtitle"  DateSelected="DatePicker_DateSelected" />
                                        <TimePicker   FontSize="Subtitle"  />
                                    </StackLayout>
                                </StackLayout>
                            </Border>







                            <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" IsVisible="{Binding IsDelivery,Mode=OneWay}" >
                                <StackLayout Spacing="10">
                                    <Label Text="{x:Static res:AppResources.Courer}" />
                                    <Picker  BackgroundColor="Red"
                     Title="{x:Static res:AppResources.SelectedCourer}"  FontSize="Subtitle"   
                     ItemsSource="{Binding Homepage.Courers,Mode=OneWay}"  
                                             SelectedItem="{Binding Order.OrderDelivery.Courier,Mode=TwoWay}"
                     SelectedIndexChanged="Picker_SelectedIndexChanged"
                     ItemDisplayBinding="{Binding FullName,Mode=OneWay}" Margin="0,0,20,0">
                                    
                                    </Picker>
                                </StackLayout>
                            </Border>
                  



                        </StackLayout>
                    </Border>
                </StackLayout>
            </ScrollView>

            <StackLayout Grid.Row="1" Padding="20,25" HorizontalOptions="Center"  Spacing="20" IsVisible="{Binding IsTakeaway,Mode=OneWay}" >


                <Border WidthRequest="600" Padding="20,25" >
                    <StackLayout Spacing="15" >
                        <StackLayout Orientation="Horizontal">
                            <Label Text="{x:Static res:AppResources.DetailDelivery}" VerticalOptions="Start" FontSize="Title"  >
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding IsDelivery,Mode=OneWay}" Value="False">
                                        <Setter Property="Text" Value="{x:Static res:AppResources.TakeAway}" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Label Text="{x:Static fa:FontAwesomeIcons.CubesStacked}" FontFamily="FAS" TextColor="{StaticResource Primary}" FontAttributes="Bold" FontSize="Title" HorizontalOptions="EndAndExpand"  />
                        </StackLayout>
                        <StackLayout Orientation="Horizontal" Spacing="10">
                            <Label Text="{x:Static res:AppResources.Standard}" />
                            <BoxView HeightRequest="1" HorizontalOptions="FillAndExpand" VerticalOptions="End" />
                            <Label  >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Order.OrderDelivery.DeliveryZone.ServiceStandardTime}"/>
                                        <Span Text="{x:Static res:AppResources.minutes}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <!--Text="{Binding Order.OrderDelivery.StandardTime}"-->
                        </StackLayout>
                        <Border Padding="15" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" >
                            <StackLayout Spacing="10">
                                <Label Text="{x:Static res:AppResources.SubmisionTime}" />
                                <StackLayout Orientation="Horizontal" Spacing="15">
                                    <DatePicker Format="dd MMMM yyyy" HorizontalOptions="FillAndExpand"  FontSize="Subtitle"  />
                                    <TimePicker   FontSize="Subtitle"  />
                                </StackLayout>
                            </StackLayout>
                        </Border>


                    </StackLayout>
                </Border>
            </StackLayout>
            <!-- доставка / на вынос -->

            <!-- Смена заказа (popup) -->
            <Border MaximumHeightRequest="200"  Padding="10" Grid.Row="1"  VerticalOptions="Start" HorizontalOptions="Center" IsVisible="{Binding IsOrderListVisible,Mode=OneWay}"  >


                <syncfusion:SfListView  x:Name="allOrdersListView" ItemsSource="{Binding AllOrders,Mode=OneWay}" ItemTemplate="{StaticResource OrderTemplate}" WidthRequest="150" CachingStrategy="RecycleTemplate" ItemsSourceChangeCachingStrategy="RecycleItems" > 
                      
                    </syncfusion:SfListView>
            

            </Border>
            <!-- Смена заказа (popup) -->

            <!-- ExtraFunctions (popup) -->
            <Border  Grid.Row="1"  BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" Padding="10"  VerticalOptions="End" HorizontalOptions="Start" Margin="10,75" IsVisible="{Binding IsExtraOn,Mode=OneWay}" >

                <StackLayout MinimumWidthRequest="330" Spacing="5" MaximumWidthRequest="350" >
                    <Grid ColumnSpacing="15" ColumnDefinitions="auto,*"  MinimumHeightRequest="30"  Padding="20,0"  >
                        <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" HorizontalTextAlignment="Start" VerticalTextAlignment="Center"  TextColor="{StaticResource Primary}" FontSize="16" >

                        </Label>
                        <Label Text="{x:Static res:AppResources.CancelOrder}" Grid.Column="1"  HorizontalTextAlignment="Center" VerticalTextAlignment="Center"  FontSize="Small" />
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding OpenExtraFunctionsCommand}" CommandParameter="cancelOrder"/>
                        </Grid.GestureRecognizers>

                    </Grid>
                    <BoxView HeightRequest="1"  Opacity="0.5"  />

                    <Grid  ColumnSpacing="15" ColumnDefinitions="auto,*" MinimumHeightRequest="30"  Padding="20,0"  >
                        <Label  Text="{x:Static fa:FontAwesomeIcons.Comment}" FontFamily="FAS" HorizontalTextAlignment="Start" VerticalTextAlignment="Center"  TextColor="{StaticResource Primary}" FontSize="16" >

                        </Label>
                        <Label Text="{x:Static res:AppResources.AddCommentToReceipt}" Grid.Column="1"  HorizontalTextAlignment="Center" VerticalTextAlignment="Center"  FontSize="Small" />
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding OpenCommentOrderCommand}" CommandParameter="open"/>
                        </Grid.GestureRecognizers>

                    </Grid>
                    <BoxView HeightRequest="1"  Opacity="0.5"  />

                    <Grid  ColumnSpacing="15" ColumnDefinitions="auto,*" MinimumHeightRequest="30"  Padding="20,0"  >
                        <Grid.IsVisible>
                            <MultiBinding Converter="{StaticResource VariableMultiValueConverter}">
                                <Binding Path="IsPredCheck"  Converter="{StaticResource InvertedConverter}"  Mode="OneWay"/>
                                <Binding Path="IsOrderPayed" Converter="{StaticResource InvertedConverter}" Mode="OneWay" />
                            

                            </MultiBinding>
                        </Grid.IsVisible>
                        <Label  Text="{x:Static fa:FontAwesomeIcons.Sort}" FontFamily="FAS" HorizontalTextAlignment="Start" VerticalTextAlignment="Center"  TextColor="{StaticResource Primary}" FontSize="16" >

                        </Label>
                        <Label Text="Разделить заказ" Grid.Column="1"  HorizontalTextAlignment="Center" VerticalTextAlignment="Center"  FontSize="Small" />
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding OpenExtraFunctionsCommand}" CommandParameter="split"/>
                        </Grid.GestureRecognizers>

                    </Grid>



                    <!--<BoxView HeightRequest="1" Opacity=".5" IsVisible="{Binding IsPredCheck,Mode=OneWay}"/>
                    <Grid  ColumnSpacing="15" ColumnDefinitions="auto,*" MinimumHeightRequest="30"  Padding="20,0"  IsVisible="{Binding IsPredCheck,Mode=OneWay}" >
                        <Label  Text="{x:Static fa:FontAwesomeIcons.Print}" FontFamily="FAS" HorizontalTextAlignment="Start" VerticalTextAlignment="Center"  TextColor="{StaticResource Primary}" FontSize="Header" >

                        </Label>
                        <Label Text="Отменить предчек" Grid.Column="1"  HorizontalTextAlignment="Center" VerticalTextAlignment="Center"  FontSize="Small" />
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding OpenExtraFunctionsCommand}" CommandParameter="cancelPredCheck"/>
                        </Grid.GestureRecognizers>

                    </Grid>-->

                </StackLayout>

          
            </Border>
            <!-- ExtraFunctions (popup) -->

            <!-- Модификаторы (popup) -->
            <Grid Grid.RowSpan="2"  IsVisible="{Binding IsModificationOn,Mode=OneWay}"  >
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding }"/>
                </Grid.GestureRecognizers>
                <Border MaximumHeightRequest="550" WidthRequest="800"  Grid.Row="1"  VerticalOptions="Fill" HorizontalOptions="Center" >
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding }"/>
                    </Border.GestureRecognizers>
                    <Grid RowDefinitions="50,*,60">
                        
                        <Label Text="{x:Static res:AppResources.Modifiers}" FontSize="16" VerticalOptions="Center" HorizontalOptions="Center" />
                        <Border HorizontalOptions="End" Opacity="0.6" Padding="20,15">
                            <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" FontSize="Subtitle" VerticalOptions="Center" HorizontalOptions="Center" />


                            <Border.GestureRecognizers>

                                <TapGestureRecognizer Command="{Binding OpenOrCloseModifiersListCommand}"/>
                            </Border.GestureRecognizers>
                        </Border>




                        <syncfusion:SfListView  
                                x:Name="modifiersListView"
                               ItemSize="240"
                                VerticalOptions="FillAndExpand"
                                MinimumHeightRequest="490"
                                ScrollBarVisibility="Never"
                                CanMaintainScrollPosition="True"
                                   AutoFitMode="DynamicHeight"
                             Grid.Row="1"
                                 ItemsSource="{Binding Modifiers,Mode=OneWay}"
                            ItemsSourceChangeCachingStrategy="ClearItems"
                             CachingStrategy="RecycleTemplate"
                                           
                                            ItemTemplate="{StaticResource ModificationDataTemplateSelector}">
                            
                        </syncfusion:SfListView>


                        <HorizontalStackLayout Padding="20,10" Grid.Row="2" >
                            <Label  Opacity="0.6"  FontSize="16" VerticalOptions="Center" HorizontalOptions="Center" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{x:Static res:AppResources.Total}"/>
                                        <Span Text=" : "/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <Label    FontSize="16" VerticalOptions="Center" HorizontalOptions="Center" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding PriceModifications,Mode=OneWay}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=Homepage.Currency }"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>


                            <Grid HorizontalOptions="FillAndExpand"/>

                            <Border HorizontalOptions="End" Padding="5,0"  Margin="15,0">
                                <Label Text="{x:Static res:AppResources.Cancel}" TextColor="Red"  FontSize="16" FontAttributes="Bold" VerticalOptions="Center"  >

                                </Label>

                                <Border.GestureRecognizers>

                                    <TapGestureRecognizer Command="{Binding OpenOrCloseModifiersListCommand}"/>
                                </Border.GestureRecognizers>
                            </Border>

                            <Button Text="{x:Static res:AppResources.AddToCheck}" TextTransform="None" BackgroundColor="{StaticResource GreenButton}" FontAttributes="Bold" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SelectedModificationsCommand}" />

                        </HorizontalStackLayout>
                    </Grid>
                 
                </Border>


       
            </Grid>
            <!-- Модификаторы (popup) -->


            <!-- PromotionBonusTempate (popup) -->
            <Grid Grid.RowSpan="2"  IsVisible="{Binding IsPromotionBonusOn,Mode=OneWay}"  >
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding }"/>
                </Grid.GestureRecognizers>
                <Border MaximumHeightRequest="550" WidthRequest="800"  Grid.Row="1"  VerticalOptions="Fill" HorizontalOptions="Center" >
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding }"/>
                    </Border.GestureRecognizers>
                    <Grid RowDefinitions="50,*,60">
                        
                        <Label Text="Выберите бонусные товары" FontSize="16" VerticalOptions="Center" HorizontalOptions="Center" />
                        <Border HorizontalOptions="End" Opacity="0.6" Padding="20,15">
                            <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" FontSize="Subtitle" VerticalOptions="Center" HorizontalOptions="Center" />


                            <Border.GestureRecognizers>

                                <TapGestureRecognizer Command="{Binding CloseBonusPromotionCommand}"/>
                            </Border.GestureRecognizers>
                        </Border>




                        <syncfusion:SfListView  
                              x:Name="PromotionBonusTempateListView"
                               ItemSize="240"
                         
                            HorizontalOptions="Fill"
                                VerticalOptions="FillAndExpand"
                                MinimumHeightRequest="490"
                   
                  
                                ScrollBarVisibility="Never"
                                CanMaintainScrollPosition="True"
                                   AutoFitMode="DynamicHeight"
                            
                             Grid.Row="1"
                           
                                 ItemsSource="{Binding ItemsInPromotion,Mode=OneWay}"
                            ItemsSourceChangeCachingStrategy="ClearItems"
                             CachingStrategy="CreateNewTemplate"
                            
                                           
                                            ItemTemplate="{StaticResource PromotionBonusTempate}">
                            <syncfusion:SfListView.ItemsLayout>
                                <syncfusion:GridLayout SpanCount="{Binding  PromotionBonusSpanCount,Mode=OneWay}" >
                                   
                                </syncfusion:GridLayout>
                              
                            </syncfusion:SfListView.ItemsLayout>

                      

                            
                            
                            <syncfusion:SfListView.Triggers>
                                <DataTrigger TargetType="syncfusion:SfListView" Binding="{Binding IsModifiersBonusOn,Mode=OneWay}" Value="true" >
                                    <Setter Property="ItemsSource" Value="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel} },Path=CurrentModifiersInBonusItems,Mode=OneWay}" />
                                    <Setter Property="ItemTemplate" Value="{StaticResource  ModificationDataTemplateSelector}" />
                                    <Setter Property="ItemSize" Value="1040" />
                                  
                                 
                                </DataTrigger>
                               

                            </syncfusion:SfListView.Triggers>
                            
                        </syncfusion:SfListView>


                        <HorizontalStackLayout Padding="20,10" Grid.Row="2" >
                           

                            <Grid HorizontalOptions="FillAndExpand"/>

                            <Border HorizontalOptions="End" Padding="5,0"  Margin="15,0">
                                <Label Text="{x:Static res:AppResources.Cancel}" TextColor="Red"  FontSize="16" FontAttributes="Bold" VerticalOptions="Center"  >

                                </Label>

                                <Border.GestureRecognizers>

                                    <TapGestureRecognizer Command="{Binding CloseBonusPromotionCommand}"/>
                                </Border.GestureRecognizers>
                            </Border>

                            <Button Text="{x:Static res:AppResources.AddToCheck}" TextTransform="None" BackgroundColor="{StaticResource GreenButton}" FontAttributes="Bold" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:OrderDetailPageViewModel}}, Path=SaveAddingBonusItemCommand}" />

                        </HorizontalStackLayout>
                    </Grid>
                 
                </Border>


       
            </Grid>
            <!-- PromotionBonusTempate (popup) -->

            <!-- Добавление клиента (popup) -->
            <Grid Grid.RowSpan="2"   Background="{StaticResource TransperentDark}" IsVisible="{Binding IsAddNewClient,Mode=OneWay}" >
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding AddNewClientCommand}" CommandParameter="close" />
                </Grid.GestureRecognizers>
                <Border  Margin="40"    WidthRequest="640"  VerticalOptions="Center" HorizontalOptions="Center"  >
                    <Grid RowDefinitions="auto,*" Padding="0,20" RowSpacing="15">
                        <StackLayout HorizontalOptions="EndAndExpand" Orientation="Horizontal" Padding="20,0" >
                            <Border HorizontalOptions="EndAndExpand" Padding="20,0"  Margin="15,0">
                                <Label Text="{x:Static res:AppResources.Cancel}" TextColor="Red"  FontSize="Subtitle" FontAttributes="Bold" VerticalOptions="Center"  >

                                </Label>

                                <Border.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding AddNewClientCommand}" CommandParameter="close" />
                                </Border.GestureRecognizers>
                            </Border>

                            <Button   HorizontalOptions="EndAndExpand" Text="{x:Static res:AppResources.Register}" TextTransform="None"  FontAttributes="Bold" Command="{Binding AddNewClientCommand}" CommandParameter="save" />
                        </StackLayout>
                        <ScrollView Grid.Row="1" Padding="20,0" >
                            <StackLayout Spacing="15">

                                <Border BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" Padding="20,25"  >
                                    <StackLayout Spacing="15" >
                                        <StackLayout Orientation="Horizontal">
                                            <Label Text="{x:Static res:AppResources.PersonalInfo}" VerticalOptions="Start" FontSize="Title"  />
                                            <Label Text="{x:Static fa:FontAwesomeIcons.AddressCard}" FontFamily="FAS" TextColor="{StaticResource Primary}" FontAttributes="Bold" FontSize="Title" HorizontalOptions="EndAndExpand" />
                                        </StackLayout>
                                        <Border Padding="15"  >
                                            <StackLayout Spacing="10">
                                                <Label Text="{x:Static res:AppResources.FLMClient}" />
                                                <Entry Text="{Binding NewClient.FullName,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.EnterFlmClient}"  FontSize="Subtitle"  />
                                            </StackLayout>
                                        </Border>
                                        <Border Padding="15" >
                                            <StackLayout Spacing="10">
                                                <Label Text="{x:Static res:AppResources.NumberPhone}" />
                                                <StackLayout Orientation="Horizontal" Spacing="15">
                                                    <Picker Title="+7" WidthRequest="45" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" FontSize="Subtitle" IsVisible="False" >
                                                        <Picker.ItemsSource>
                                                            <x:Array Type="{x:Type x:String}">
                                                                <x:String>+7</x:String>
                                                                <x:String>+8</x:String>
                                                                <x:String>+600</x:String>
                                                                <x:String>+1</x:String>
                                                                <x:String>+911</x:String>
                                                            </x:Array>
                                                        </Picker.ItemsSource>
                                                    </Picker>
                                                    <Entry Text="{Binding NewClient.PhoneNumber,Mode=TwoWay}" Placeholder="X (XXX) XXX XXXX"  FontSize="Subtitle" HorizontalOptions="FillAndExpand"  Keyboard="Numeric">
                                                        <Entry.Behaviors>
                                                            <toolkit:MaskedBehavior Mask="X (XXX) XXX XXXX" UnmaskedCharacter="X" />
                                                        </Entry.Behaviors>
                                                    </Entry>

                                                </StackLayout>
                                            </StackLayout>
                                        </Border>
                                        <Border Padding="15"  >
                                            <StackLayout Spacing="10">
                                                <Label Text="{x:Static res:AppResources.ClientEmail}" />
                                                <Entry Text="{Binding NewClient.Email,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.EnterClientEmail}"  FontSize="Subtitle"  />
                                            </StackLayout>
                                        </Border>
                                        <Border Padding="15"  >
                                            <StackLayout Spacing="10">
                                                <Label Text="{x:Static res:AppResources.BirthDayDate}" />
                                                <DatePicker Date="{Binding NewClient.BirthDay,Mode=TwoWay}" Format="dd MMMM yyyy"  FontSize="Subtitle"  />
                                            </StackLayout>
                                        </Border>
                                        <Border Padding="15"  >
                                            
                                            
                                            <StackLayout Spacing="10">
                                                <Label Text="{x:Static res:AppResources.ClientGroup}" />
                                                <Picker Title="{x:Static res:AppResources.SelectedClientGroup}"   FontSize="Subtitle"  ItemsSource="{Binding ClientGruops,Mode=OneWay}" ItemDisplayBinding="{Binding Name,Mode=OneWay}"  SelectedItem="{Binding NewClient.ClientGroup,Mode=OneWayToSource}" >

                                                </Picker>
                                            </StackLayout>
                                            
                                            
                                            
                                            
                                        </Border>
                                        <Border Padding="15"  >
                                            <StackLayout Spacing="10">
                                                <Label Text="{x:Static res:AppResources.Commentary}" />
                                                <Entry Text="{Binding NewClient.Description,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.WriteCommentLabel}"  FontSize="Subtitle"  />
                                            </StackLayout>
                                        </Border>
                                    </StackLayout>
                                </Border>

                                <StackLayout  Spacing="15" BindableLayout.ItemsSource="{Binding ClientAddress, Mode=TwoWay}" BindableLayout.ItemTemplate="{StaticResource ClientAddressTemplate}"  >

                                </StackLayout>



                                <Button Text="{x:Static res:AppResources.AddNewAddress}" TextTransform="None"  FontAttributes="Bold" Command="{Binding AddNewAddresNewClienCommand}" HorizontalOptions="EndAndExpand" />
                                <StackLayout   Spacing="15" BindableLayout.ItemsSource="{Binding ClientCards, Mode=OneWay}">
                                    <BindableLayout.ItemTemplate>
                                        <DataTemplate>
                                            <Border BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" Padding="20,25"  >
                                                <StackLayout Spacing="15" x:DataType="models:ClientCard" >
                                                    <StackLayout Orientation="Horizontal">
                                                        <Label Text="{x:Static res:AppResources.ClientCard}" VerticalOptions="Start" FontSize="Title"  />
                                                        <Label Text="{x:Static fa:FontAwesomeIcons.CreditCard}" FontFamily="FAS" TextColor="{StaticResource Primary}" FontAttributes="Bold" FontSize="Title" HorizontalOptions="EndAndExpand" />
                                                    </StackLayout>

                                                    <Border Padding="15"  >
                                                        <StackLayout Spacing="10">
                                                            <Label Text="{x:Static res:AppResources.CardNumber}" />
                                                            <Entry Text="{Binding CardNumber,Mode=TwoWay}" Placeholder="{x:Static res:AppResources.EnterCardNumber}"  FontSize="Subtitle"  Keyboard="Numeric">
                                                                <Entry.Behaviors>
                                                                    <toolkit:MaskedBehavior Mask="XXXX XXXX XXXX XXXX" />
                                                                </Entry.Behaviors>
                                                            </Entry>
                                                        </StackLayout>
                                                    </Border>
                                                </StackLayout>
                                            </Border>
                                        </DataTemplate>
                                    </BindableLayout.ItemTemplate>
                                </StackLayout>
                                <Button Text="{x:Static res:AppResources.AddNewCard}" TextTransform="None"  FontAttributes="Bold" Command="{Binding AddNewCardNewClienCommand}" HorizontalOptions="EndAndExpand" />

                            </StackLayout>
                        </ScrollView>
                    </Grid>
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer  />
                    </Border.GestureRecognizers>
                </Border>

            </Grid>
            <!-- Добавление клиента (popup) -->

            <!--добавление комментария-->
            <Grid Grid.RowSpan="2"   Background="{StaticResource TransperentDark}"  IsVisible="{Binding IsOrderComment}" >
                
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding OpenCommentOrderCommand}" CommandParameter="close" />
                </Grid.GestureRecognizers>
                <Border >
                    
               
                <StackLayout MaximumWidthRequest="450" VerticalOptions="Center" Spacing="5" Padding="20,10"  BackgroundColor="White"  >
                    
                    <Label Text="{x:Static fa:FontAwesomeIcons.Xmark}" FontFamily="FAS" FontSize="Subtitle" />

                    <Label Text="{x:Static res:AppResources.EnterCommentOrder}" FontAttributes="Bold" Margin="10" HorizontalOptions="Center" FontSize="16" />

                        <Border Padding="5" BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},Light={StaticResource BackgroundColorLight}}" > 
                            <Entry Text="{Binding OrderComment}" Placeholder="{x:Static res:AppResources.EnterCommentOrderLabel}" HorizontalTextAlignment="Center" VerticalOptions="Center" >

                        </Entry>
                    </Border>


                    <Button Text="{x:Static res:AppResources.ConfirmLabel}" Margin="15" FontAttributes="Bold" HorizontalOptions="Center"   Padding="40,10"  Command="{Binding OpenCommentOrderCommand}" CommandParameter="succeful" />
                </StackLayout>
                </Border>




            </Grid>
            <!--добавление комментария-->
        </Grid>
    </ContentView.Content>
</ContentView>
